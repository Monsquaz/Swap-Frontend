fragment userParts on User {
  id
  slug
  username
  gravatar(size: $gravatarSize)
}

fragment roundsubmissionParts on Roundsubmission {
  id
  status
  round {
    id
    index
  }
  participant {
    ...userParts
  }
  song { id }
  fileSeeded {
    id
    filename
    downloadUrl
  }
  fileSubmitted {
    id
    filename
    downloadUrl
  }
}

query Events (
  $details: Boolean = false,
  $id: ID = null,
  $slug: String = null,
  $isPublic: Boolean = null,
  $isParticipating: Boolean = null,
  $status: [EventStatus!] = null,
  $offset: Int = 0,
  $limit: Int = 500,
  $maxDescription: Int = null,
  $gravatarSize: Int = 40,
  $hostUserId: Int = null
) {
  events(selection: {
    offset: $offset,
    limit: $limit,
    sort: id,
    descending: true,
    filters: {
      id: $id,
      slug: $slug,
      isPublic: $isPublic,
      isParticipating: $isParticipating,
      status: $status,
      hostUserId: $hostUserId
    }
  }) {
    id
    slug
    name
    status
    description(maxLength: $maxDescription)
    currentRound {
      id
      index
    }
    currentRoundsubmission {
      ...roundsubmissionParts
    }
    numRounds
    numParticipants
    roundsubmissions @include(if: $details) {
      ...roundsubmissionParts
    }
    participants @include(if: $details)  {
      ...userParts
    }
    host {
      ...userParts
    }
    areChangesVisible
    isScheduleVisible
    isParticipant
    isAdministrator
    isPublic
    ... on AdministeredEvent {
      initialFile {
        id
        filename
        sizeHuman
        downloadUrl
      }
    }
  }
}
